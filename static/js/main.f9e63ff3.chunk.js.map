{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlEr","imdbUrlEr","submitForm","event","preventDefault","imbdUrl","props","onAdd","setState","handleChange","target","name","value","test","onSubmit","this","type","placeholder","onChange","required","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9e63ff3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlEr: false,\n    imdbUrlEr: false,\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n    const movie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imbdUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    this.props.onAdd(movie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrlEr: false,\n      imdbUrlEr: false,\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      /* eslint-disable */\n      const validator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n      /* eslint-enable */\n\n      if (validator.test(value)) {\n        this.setState({ [name]: value });\n        switch (name) {\n          case 'imgUrl':\n            this.setState({ imgUrlEr: false });\n            break;\n          case 'imdbUrl':\n            this.setState({ imdbUrlEr: false });\n            break;\n          default:\n            this.setState({\n              imgUrlEr: false, imdbUrlEr: false,\n            });\n        }\n      } else {\n        this.setState({ [name]: value });\n        switch (name) {\n          case 'imgUrl':\n            this.setState({ imgUrlEr: true });\n            break;\n          case 'imdbUrl':\n            this.setState({ imdbUrlEr: true });\n            break;\n          default:\n            this.setState({\n              imgUrlEr: true, imdbUrlEr: true,\n            });\n        }\n      }\n    } else {\n      this.setState({ [name]: value });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={this.state.title}\n          onChange={this.handleChange}\n          required=\"true\"\n        />\n        <br />\n        <br />\n        <textarea\n          name=\"description\"\n          placeholder=\"What is the movie about?\"\n          value={this.state.description}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"add imgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n          required=\"true\"\n          className={this.state.imgUrlEr ? 'red' : ''}\n        />\n        <br />\n        <span className={this.state.imgUrlEr ? 'error' : ''} />\n        <br />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"add imdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n          required=\"true\"\n          className={this.state.imdbUrlEr ? 'red' : ''}\n        />\n        <br />\n        <span className={this.state.imdbUrlEr ? 'error' : ''} />\n        <br />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"add movie imdbId\"\n          value={this.state.imdbId}\n          onChange={this.handleChange}\n          required=\"true\"\n        />\n        <br />\n        <button\n          type=\"submit\"\n          disabled={this.state.imgUrlEr || this.state.imdbUrlEr}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}